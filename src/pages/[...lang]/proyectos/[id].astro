---
import Layout from '../../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../../../i18n/locales';

export function getStaticPaths() {
  const projects = ["1", "2", "3", "4", "5"];
  const langs = [undefined, 'en', 'pt'];
  
  const paths = [];
  for (const lang of langs) {
    for (const id of projects) {
      paths.push({
        params: { lang, id },
        props: { projectId: id }
      });
    }
  }
  
  return paths;
}

const { projectId } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const project = {
  id: projectId,
  title: t(`projects.${projectId}.title`),
  description: t(`projects.${projectId}.longDescription`),
  technologies: ["Astro", "TypeScript", "CSS"],
  year: projectId === "1" || projectId === "2" ? "2024" : "2023",
  images: [
    "https://via.placeholder.com/800x600",
    "https://via.placeholder.com/800x600"
  ],
  link: "https://ejemplo.com",
  github: `https://github.com/usuario/proyecto${projectId}`
};
---

<Layout title={project.title}>
  <main class="project-detail">
    <header class="project-header">
      <a href={lang === 'es' ? '/' : `/${lang}`} class="back-link">{t('projects.back')}</a>
      <div class="project-info">
        <span class="project-year">{project.year}</span>
        <h1 class="project-title">{project.title}</h1>
        <p class="project-description">{project.description}</p>
      </div>
    </header>

    <section class="project-images">
      {project.images.map((image) => (
        <img src={image} alt={`${project.title} screenshot`} class="project-image" />
      ))}
    </section>

    <section class="project-details">
      <div class="technologies">
        <h3>{t('projects.technologies')}</h3>
        <ul class="tech-list">
          {project.technologies.map((tech) => (
            <li class="tech-item">{tech}</li>
          ))}
        </ul>
      </div>

      <div class="project-links">
        {project.link && (
          <a href={project.link} target="_blank" rel="noopener noreferrer" class="project-link">
            {t('projects.viewProject')}
          </a>
        )}
        {project.github && (
          <a href={project.github} target="_blank" rel="noopener noreferrer" class="project-link">
            {t('projects.viewCode')}
          </a>
        )}
      </div>
    </section>
  </main>
</Layout>

<style>
  .project-detail {
    max-width: 1200px;
    margin: 0 auto;
    padding-bottom: 4rem;
  }

  .project-header {
    padding: 2rem 0 3rem 0;
  }

  .back-link {
    color: var(--text);
    text-decoration: none;
    font-size: 0.95rem;
    letter-spacing: 0.02em;
    transition: opacity 0.3s ease;
    display: inline-block;
    margin-bottom: 2rem;
  }

  .back-link:hover {
    opacity: 0.7;
  }

  .project-info {
    max-width: 800px;
  }

  .project-year {
    font-size: 0.875rem;
    color: var(--text-light);
    letter-spacing: 0.05em;
  }

  .project-title {
    font-size: 3rem;
    font-weight: 400;
    margin: 0.5rem 0 1rem 0;
    color: var(--text);
    line-height: 1.2;
  }

  .project-description {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--text-light);
    margin-top: 1rem;
  }

  .project-images {
    margin: 3rem 0;
  }

  .project-image {
    width: 100%;
    height: auto;
    margin-bottom: 2rem;
    border-radius: 4px;
    filter: grayscale(20%);
  }

  .project-details {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    max-width: 800px;
    margin-top: 4rem;
  }

  .technologies h3 {
    font-size: 1.1rem;
    font-weight: 400;
    margin-bottom: 1rem;
    color: var(--text);
  }

  .tech-list {
    list-style: none;
    padding: 0;
  }

  .tech-item {
    padding: 0.5rem 0;
    color: var(--text-light);
    font-size: 0.95rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  }

  .tech-item:last-child {
    border-bottom: none;
  }

  .project-links {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
  }

  .project-link {
    color: var(--text);
    text-decoration: none;
    font-size: 0.95rem;
    letter-spacing: 0.02em;
    transition: opacity 0.3s ease;
    padding: 0.5rem 0;
  }

  .project-link:hover {
    opacity: 0.7;
  }

  @media (max-width: 768px) {
    .project-title {
      font-size: 2rem;
    }

    .project-details {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
  }
</style>